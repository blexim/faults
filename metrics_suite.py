
#!/usr/bin/python

import metrics

suite = {
  'Prob_C': metrics.Prob_C,
  'Prob_E': metrics.Prob_E,
  'Prob_not_C': metrics.Prob_not_C,
  'Prob_not_E': metrics.Prob_not_E,
  'Prob_E_given_C': metrics.Prob_E_given_C,
  'Prob_E_given_not_C': metrics.Prob_E_given_not_C,
  'Prob_not_E_given_C': metrics.Prob_not_E_given_C,
  'Prob_not_E_given_not_C': metrics.Prob_not_E_given_not_C,
  'Prob_C_given_E': metrics.Prob_C_given_E,
  'Prob_not_C_given_E': metrics.Prob_not_C_given_E,
  'Prob_C_given_not_E': metrics.Prob_C_given_not_E,
  'Prob_not_C_given_not_E': metrics.Prob_not_C_given_not_E,
  'Prob_C_and_E': metrics.Prob_C_and_E,
  'Prob_not_C_and_not_E': metrics.Prob_not_C_and_not_E,
  'Suppes': metrics.Suppes,
  'Lewis': metrics.Lewis,
  'Good': metrics.Good,
  'PearlI': metrics.PearlI,
  'PearlII': metrics.PearlII,
  'Cheng': metrics.Cheng,
  'Korb2': metrics.Korb2,
  'Korb3': metrics.Korb3,
  'Landsberg': metrics.Landsberg,
  'PPV': metrics.PPV,
  'NPV': metrics.NPV,
  'Sensitivity': metrics.Sensitivity,
  'Specificity': metrics.Specificity,
  'YoudensJ': metrics.YoudensJ,
  'PosLikelyhood': metrics.PosLikelyhood,
  'YulesQ': metrics.YulesQ,
  'YulesY': metrics.YulesY,
  'GilbertWells': metrics.GilbertWells,
  'Pearson1': metrics.Pearson1,
  'Pearson3': metrics.Pearson3,
  'PearsonHeron2': metrics.PearsonHeron2,
  'GoodKruskal': metrics.GoodKruskal,
  'Anderberg': metrics.Anderberg,
  'Peirce': metrics.Peirce,
  'Earman': metrics.Earman,
  'Keynes': metrics.Keynes,
  'Good2': metrics.Good2,
  'Carnap1': metrics.Carnap1,
  'Carnap2': metrics.Carnap2,
  'Crupi': metrics.Crupi,
  'Rescher': metrics.Rescher,
  'Kemeny': metrics.Kemeny,
  'Popper1': metrics.Popper1,
  'Popper2': metrics.Popper2,
  'Levi': metrics.Levi,
  'Finch1': metrics.Finch1,
  'Gaifman': metrics.Gaifman,
  'Rips': metrics.Rips,
  'Faith': metrics.Faith,
  'Forbes1': metrics.Forbes1,
  'Forbes2': metrics.Forbes2,
  'Sorgenfrei': metrics.Sorgenfrei,
  'Mountford': metrics.Mountford,
  'Mcconnaughey': metrics.Mcconnaughey,
  'DandK': metrics.DandK,
  'Dennis': metrics.Dennis,
  'Simpson': metrics.Simpson,
  'FagerMc': metrics.FagerMc,
  'Gower': metrics.Gower,
  'Ochiai2': metrics.Ochiai2,
  'SokalSneath4': metrics.SokalSneath4,
  'SokalSneath5': metrics.SokalSneath5,
  'Cole': metrics.Cole,
  'Stiles': metrics.Stiles,
  'Dispersion': metrics.Dispersion,
  'Michael': metrics.Michael,
  'Baroni1': metrics.Baroni1,
  'Baroni2': metrics.Baroni2,
  'ShapeDiff': metrics.ShapeDiff,
  'PatternDiff': metrics.PatternDiff,
  'Fager': metrics.Fager,
  'Jaccard_etc': metrics.Jaccard_etc,
  'Scott_etc': metrics.Scott_etc,
  'Kulczynski2': metrics.Kulczynski2,
  'Ochiai': metrics.Ochiai,
  'M2': metrics.M2,
  'Naish_etc': metrics.Naish_etc,
  'Fleiss': metrics.Fleiss,
  'Ample2': metrics.Ample2,
  'ArithmeticMean': metrics.ArithmeticMean,
  'HarmonicMean': metrics.HarmonicMean,
  'Cohen': metrics.Cohen,
  'Wong2_etc': metrics.Wong2_etc,
  'Wong3': metrics.Wong3,
  'Wong3Naish': metrics.Wong3Naish,
  'CBISqrt': metrics.CBISqrt,
  'CBIlog': metrics.CBIlog,
  'Zoltar': metrics.Zoltar,
  'Lex': metrics.Lex,
  'Const': metrics.Const,
  'Rand': metrics.Rand,
  'PhiCoefficient': metrics.PhiCoefficient,
  'Kappa': metrics.Kappa,
  'MI': metrics.MI,
  'JMeasure': metrics.JMeasure,
  'GiniIndex': metrics.GiniIndex,
  'Confidence': metrics.Confidence,
  'Laplace': metrics.Laplace,
  'Conviction': metrics.Conviction,
  'Interest': metrics.Interest,
  'Certainty': metrics.Certainty,
  'AddedValue': metrics.AddedValue,
  'CollectiveStrength': metrics.CollectiveStrength,
  'Klosgen': metrics.Klosgen,
  'Just_cf': metrics.Just_cf,
  'Just_nf': metrics.Just_nf,
  'Lex_Ochiai': metrics.Lex_Ochiai,
  'Lex_Zoltar': metrics.Lex_Zoltar,
  'Lex_M2': metrics.Lex_M2,

}
